General Description
This directory contains the implementation of the Inferior Olive Network model by Jornt De Gruijl, originally written in Matlab and here converted to the C language by Sebastian Isaza.

The software project is composed of only three files: a makefile, a C source file and a C header file.

Compiling
A makefile is provided for direct compilation in a Linux system with gcc and make support. Open a console and type make. If not using the provided makefile, please note that the program should be linked with a mathematical library (-lm in gcc).

Executing
If using the makefile, the resulting binary will be called InfOli. Open a console a type ./InfOli to run the default simulation with a hardcoded input pulse. The program will store the output in a file called InferiorOlive_Output.txt. The expected output for the default simulation is included in this directory as InferiorOlive_Output_ref.txt.

Alternatively, a file containing the input vectors can be provided as an argument: e.g. ./InfOli Evoked_Iapp.txt

Configuration Options
At the top of the infoli.h header file, four definitions control important simulation parameters that can changed with attention.

RAND_INIT: When different from zero, the program will execute a random number of simulation steps for every cell. The purpose is that every cell start the actual simulation with a random oscillation state. To facilitate debugging, this flag can be set to zero.

SIMTIME: It's the desired simulation time in milliseconds. Notice that the model produces one simulation step every 50 microseconds. In order to observe an oscillation cycle of the cell's potential in the output, the simulation should run for at least ~200 milliseconds. For a complete picture of a spike generated by the default input pulse, the simulation should run for about 3000 milliseconds at least.

IO_NETWORK_DIM1 and IO_NETWORK_DIM2: These are the dimensions of the 2D network mesh in the model. By default, a single cell is simulated.

